name: deploy-on-release

on:
  release:
      types: [published]

jobs:

  # build-pypi:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: set up Python 3.6
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.6

  #     - name: Generating distribution archives
  #       run: |
  #         pip install --upgrade setuptools wheel
  #         python setup.py sdist bdist_wheel --universal

  #     - name: Publish a Python distribution to PyPI
  #       uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_PASSWORD }}

  build-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker: ['', '-fp16', '-dev', '-dev-fp16']

    steps:
      - uses: actions/checkout@v2

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF:10})" >> ${GITHUB_ENV}

      - name: Publish Docker to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: catalystteam/catalyst
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: docker/Dockerfile${{ matrix.docker }}
          tags: "latest,${{ env.RELEASE_VERSION }}${{ matrix.docker }}"

  # build-docs:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Get release version
  #       id: get_version
  #       run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
