# For detailed comments on this configuration file refer to configs/hydra-description-eng.yml

shared:
  dataset_root: './data'
  seed: 42
  valid_loader: valid
  valid_metric: accuracy01
  minimize_valid_metric: False

  optimizer:
    target: torch.optim.Adam
    lr: 0.001
    weight_decay: 0.0001

  scheduler:
    target: catalyst.contrib.nn.OneCycleLRWithWarmup
    warmup_steps: 1
    lr_range: [ 0.005, 0.00005 ]
    momentum_range: [ 0.85, 0.95 ]

args:
  expdir: "cifar_stages"
  logdir: "./logs/cifar_stages_hydra"
  seed: ${shared.seed}
  distributed: False
  apex: False
  amp: False
  verbose: False
  timeit: False
  check: False
  overfit: False
  deterministic: False
  benchmark: False

runner:
  _target_: catalyst.runners.config.SupervisedConfigRunner
  input_key: "features"
  output_key: "logits"
  target_key: "targets"
  loss_key: "loss"

models:
  _target_: cifar_stages.SimpleNet

stages:
  train:
    num_epochs: 10

    datasets:
      train:
        _target_: catalyst.contrib.datasets.MNIST
        root: ${shared.dataset_root}
        train: True
        download: True
      valid:
        _target_: catalyst.contrib.datasets.MNIST
        root: ${shared.dataset_root}
        train: False
        download: True

    loaders:
      train:
        batch_size: ${shared.train_batch_size}
        num_workers: ${shared.train_num_workers}
      valid:
        batch_size: ${shared.valid_batch_size}
        num_workers: ${shared.valid_num_workers}

    transforms:
      train:
        _target_: _tests_cv_classification_hydra.simple_transform
      valid:
        _target_: _tests_cv_classification_hydra.simple_transform

    criterions:
      criterion:
        _target_: torch.nn.CrossEntropyLoss

    optimizers:
      adam:
        _target_: ${shared.optimizer.target}
        models:
          - simplenet
        lr: ${shared.optimizer.lr}
        weight_decay: ${shared.optimizer.weight_decay}

    schedulers:
      one_cycle_lr_with_warmup:
        _target_: ${shared.scheduler.target}
        optimizer: adam
        num_steps: ${shared.num_epochs}
        warmup_steps: ${shared.scheduler.warmup_steps}
        lr_range: ${shared.scheduler.lr_range}
        momentum_range: ${shared.scheduler.momentum_range}

    callbacks:
      loss:
        _target_: catalyst.dl.CriterionCallback
        criterion_key: criterion
      optimizer:
        _target_: catalyst.dl.OptimizerCallback
        optimizer_key: adam
      accuracy:
        _target_: catalyst.dl.AccuracyCallback
        accuracy_args: [ 1, 3, 5 ]
      scheduler:
        _target_: catalyst.dl.SchedulerCallback
        scheduler_key: one_cycle_lr_with_warmup
        reduced_metric: accuracy01
      saver:
        _target_: catalyst.dl.CheckpointCallback
        save_n_best: 3

hydra:
  run:
    dir: ${args.logdir}
